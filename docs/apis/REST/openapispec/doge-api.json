{
  "openapi": "3.0.0",
  "paths": {
    "/verifier/doge/api/indexer/state": {
      "get": {
        "description": "Requests indexer state.",
        "operationId": "DOGEIndexerController_indexerState",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the indexer state.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Response status.",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "indexedBlockRange": {
                          "type": "object",
                          "properties": {
                            "first": {
                              "type": "number",
                              "description": "First block number."
                            },
                            "last": {
                              "type": "number",
                              "description": "Last block number."
                            }
                          }
                        },
                        "tipHeights": {
                          "type": "number",
                          "example": 2578025,
                          "description": "Height of block number."
                        },
                        "lastTipUpdateTimestamp": {
                          "type": "number",
                          "example": 1707842143
                        },
                        "lastTailUpdateTimestamp": {
                          "type": "number",
                          "example": 1707505998
                        },
                        "state": {
                          "type": "string",
                          "example": "running"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Indexer"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/api/indexer/block-range": {
      "get": {
        "description": "Requests for indexer block range.",
        "operationId": "DOGEIndexerController_blockRange",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns indexer block range.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the response.",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "number",
                          "description": "First block number.",
                          "example": 5706001
                        },
                        "last": {
                          "type": "number",
                          "description": "Last block number.",
                          "example": 5953106
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Indexer"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/api/indexer/transaction/{txHash}": {
      "get": {
        "description": "Requests for processed block transaction entities.",
        "operationId": "DOGEIndexerController_transaction",
        "parameters": [
          {
            "name": "txHash",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns processed block transaction entities."
          }
        },
        "tags": [
          "Indexer"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/api/indexer/block/{blockHash}": {
      "get": {
        "description": "Requests for processed block entity.",
        "operationId": "DOGEIndexerController_block",
        "parameters": [
          {
            "name": "blockHash",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns processed block entity."
          }
        },
        "tags": [
          "Indexer"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/api/indexer/confirmed-block-at/{blockNumber}": {
      "get": {
        "description": "Requests for block confirmation.",
        "operationId": "DOGEIndexerController_confirmedBlockAt",
        "parameters": [
          {
            "name": "blockNumber",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns block confirmation."
          }
        },
        "tags": [
          "Indexer"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/api/indexer/block-height": {
      "get": {
        "description": "Requests for block height.",
        "operationId": "DOGEIndexerController_blockHeight",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns block height."
          }
        },
        "tags": [
          "Indexer"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/api/indexer/transaction-block/{txHash}": {
      "get": {
        "description": "Requests for transaction block.",
        "operationId": "DOGEIndexerController_transactionBlock",
        "parameters": [
          {
            "name": "txHash",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns transaction block."
          }
        },
        "tags": [
          "Indexer"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/api/indexer/transactions": {
      "get": {
        "description": "Requests for processed transactions.",
        "operationId": "DOGEIndexerController_transactionsWithinBlockRange",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns processed transactions."
          }
        },
        "tags": [
          "Indexer"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/AddressValidity": {
      "post": {
        "description": "Tries to verify address.",
        "operationId": "DOGEAddressValidityVerifierController_verify",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncodedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns address verfication status."
          }
        },
        "tags": [
          "AddressValidity"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/AddressValidity/prepareResponse": {
      "post": {
        "description": "Tries to validate address.",
        "operationId": "DOGEAddressValidityVerifierController_prepareResponse",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressValidity_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns address status and hash.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressValidationResponse"
                }
              }
            }
          }
        },
        "tags": [
          "AddressValidity"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/AddressValidity/mic": {
      "post": {
        "description": "Tries to verify attestation request.",
        "operationId": "DOGEAddressValidityVerifierController_mic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressValidity_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns attestation request status with message integrity code.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "VALID"
                    },
                    "messageIntegrityCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "AddressValidity"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/AddressValidity/prepareRequest": {
      "post": {
        "description": "Encodes attestation request.",
        "operationId": "DOGEAddressValidityVerifierController_prepareRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressValidity_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns encoded attestation request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrepareRequestResponse"
                }
              }
            }
          }
        },
        "tags": [
          "AddressValidity"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/BalanceDecreasingTransaction": {
      "post": {
        "description": "Requests balance decreasing transactions.",
        "operationId": "DOGEBalanceDecreasingTransactionVerifierController_verify",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncodedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns balance decreasing transactions."
          }
        },
        "tags": [
          "BalanceDecreasingTransaction"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/BalanceDecreasingTransaction/prepareResponse": {
      "post": {
        "description": "Tries to verify attestation request.",
        "operationId": "DOGEBalanceDecreasingTransactionVerifierController_prepareResponse",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceDecreasingTransaction_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns transaction status."
          }
        },
        "tags": [
          "BalanceDecreasingTransaction"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/BalanceDecreasingTransaction/mic": {
      "post": {
        "description": "Tries to verify attestation request.",
        "operationId": "DOGEBalanceDecreasingTransactionVerifierController_mic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceDecreasingTransaction_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns attestation request status with message integrity code."
          }
        },
        "tags": [
          "BalanceDecreasingTransaction"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/BalanceDecreasingTransaction/prepareRequest": {
      "post": {
        "description": "Encodes attestation request.",
        "operationId": "DOGEBalanceDecreasingTransactionVerifierController_prepareRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceDecreasingTransaction_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns encoded attestation request."
          }
        },
        "tags": [
          "BalanceDecreasingTransaction"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/ConfirmedBlockHeightExists": {
      "post": {
        "description": "Requests to confirm block height exists.",
        "operationId": "DOGEConfirmedBlockHeightExistsVerifierController_verify",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncodedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns confirmed block height."
          }
        },
        "tags": [
          "ConfirmedBlockHeightExists"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/ConfirmedBlockHeightExists/prepareResponse": {
      "post": {
        "description": "Verifies attenstation request.",
        "operationId": "DOGEConfirmedBlockHeightExistsVerifierController_prepareResponse",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmedBlockHeightExists_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns attestation request status."
          }
        },
        "tags": [
          "ConfirmedBlockHeightExists"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/ConfirmedBlockHeightExists/mic": {
      "post": {
        "description": "Tries to verify attestation request.",
        "operationId": "DOGEConfirmedBlockHeightExistsVerifierController_mic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmedBlockHeightExists_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns attestation request with message integrity code."
          }
        },
        "tags": [
          "ConfirmedBlockHeightExists"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/ConfirmedBlockHeightExists/prepareRequest": {
      "post": {
        "description": "Encodes attestation data.",
        "operationId": "DOGEConfirmedBlockHeightExistsVerifierController_prepareRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmedBlockHeightExists_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns encoded attestation data."
          }
        },
        "tags": [
          "ConfirmedBlockHeightExists"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/Payment": {
      "post": {
        "description": "Requests payment transactions.",
        "operationId": "DOGEPaymentVerifierController_verify",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncodedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns payment validation."
          }
        },
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/Payment/prepareResponse": {
      "post": {
        "description": "Tries to verify attestation request.",
        "operationId": "DOGEPaymentVerifierController_prepareResponse",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns attestation request status."
          }
        },
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/Payment/mic": {
      "post": {
        "description": "Verifies attestation request.",
        "operationId": "DOGEPaymentVerifierController_mic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns attestation request status with message integrity code."
          }
        },
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/Payment/prepareRequest": {
      "post": {
        "description": "Encodes attestation request.",
        "operationId": "DOGEPaymentVerifierController_prepareRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns encoded attestation request."
          }
        },
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/ReferencedPaymentNonexistence": {
      "post": {
        "description": "Requests referenced payment non existence transactions.",
        "operationId": "DOGEReferencedPaymentNonexistenceVerifierController_verify",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncodedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns referenced payment non-existence transactions."
          }
        },
        "tags": [
          "ReferencedPaymentNonexistence"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/ReferencedPaymentNonexistence/prepareResponse": {
      "post": {
        "description": "Tries to verify attestation request.",
        "operationId": "DOGEReferencedPaymentNonexistenceVerifierController_prepareResponse",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferencedPaymentNonexistence_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns attestation request status."
          }
        },
        "tags": [
          "ReferencedPaymentNonexistence"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/ReferencedPaymentNonexistence/mic": {
      "post": {
        "description": "Verifies attestation request.",
        "operationId": "DOGEReferencedPaymentNonexistenceVerifierController_mic",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferencedPaymentNonexistence_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns attestation request status with message integrity code."
          }
        },
        "tags": [
          "ReferencedPaymentNonexistence"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/verifier/doge/ReferencedPaymentNonexistence/prepareRequest": {
      "post": {
        "description": "Encodes attestation request.",
        "operationId": "DOGEReferencedPaymentNonexistenceVerifierController_prepareRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferencedPaymentNonexistence_RequestNoMic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns encoded attestation request."
          }
        },
        "tags": [
          "ReferencedPaymentNonexistence"
        ],
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Verifier and indexer server (testDOGE)",
    "description": "Verifier and indexer server over an indexer database.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://attestation-coston.aflabs.net"
    }
  ],
  "components": {
    "securitySchemes": {
      "X-API-KEY": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    },
    "schemas": {
      "EncodedRequest": {
        "type": "object",
        "properties": {}
      },
      "AddressValidity_RequestBody": {
        "type": "object",
        "properties": {
          "addressStr": {
            "type": "string",
            "description": "Address to be verified.",
            "example": "Example string"
          }
        },
        "required": [
          "addressStr"
        ]
      },
      "AddressValidity_RequestNoMic": {
        "type": "object",
        "properties": {
          "attestationType": {
            "type": "string",
            "description": "ID of the attestation type.",
            "example": "0x4164647265737356616c69646974790000000000000000000000000000000000"
          },
          "sourceId": {
            "type": "string",
            "description": "Id of the data source.",
            "example": "0x4254430000000000000000000000000000000000000000000000000000000000"
          },
          "requestBody": {
            "description": "Data defining the request. Type (struct) and interpretation is determined by the 'attestationType'.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressValidity_RequestBody"
              }
            ]
          }
        },
        "required": [
          "attestationType",
          "sourceId",
          "requestBody"
        ]
      },
      "BalanceDecreasingTransaction_RequestBody": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "ID of the payment transaction.",
            "example": "0x0000000000000000000000000000000000000000000000000000000000000000"
          },
          "sourceAddressIndicator": {
            "type": "string",
            "description": "The indicator of the address whose balance has been decreased.",
            "example": "0x0000000000000000000000000000000000000000000000000000000000000000"
          }
        },
        "required": [
          "transactionId",
          "sourceAddressIndicator"
        ]
      },
      "BalanceDecreasingTransaction_RequestNoMic": {
        "type": "object",
        "properties": {
          "attestationType": {
            "type": "string",
            "description": "ID of the attestation type.",
            "example": "0x42616c616e636544656372656173696e675472616e73616374696f6e00000000"
          },
          "sourceId": {
            "type": "string",
            "description": "ID of the data source.",
            "example": "0x4254430000000000000000000000000000000000000000000000000000000000"
          },
          "requestBody": {
            "description": "Data defining the request. Type (struct) and interpretation is determined by the 'attestationType'.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BalanceDecreasingTransaction_RequestBody"
              }
            ]
          }
        },
        "required": [
          "attestationType",
          "sourceId",
          "requestBody"
        ]
      },
      "ConfirmedBlockHeightExists_RequestBody": {
        "type": "object",
        "properties": {
          "blockNumber": {
            "type": "string",
            "description": "The number of the block the request wants a confirmation of.",
            "example": "123"
          },
          "queryWindow": {
            "type": "string",
            "description": "The length of the period in which the block production rate is to be computed.",
            "example": "123"
          }
        },
        "required": [
          "blockNumber",
          "queryWindow"
        ]
      },
      "ConfirmedBlockHeightExists_RequestNoMic": {
        "type": "object",
        "properties": {
          "attestationType": {
            "type": "string",
            "description": "ID of the attestation type.",
            "example": "0x436f6e6669726d6564426c6f636b486569676874457869737473000000000000"
          },
          "sourceId": {
            "type": "string",
            "description": "ID of the data source.",
            "example": "0x4254430000000000000000000000000000000000000000000000000000000000"
          },
          "requestBody": {
            "description": "Data defining the request. Type (struct) and interpretation is determined by the 'attestationType'.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ConfirmedBlockHeightExists_RequestBody"
              }
            ]
          }
        },
        "required": [
          "attestationType",
          "sourceId",
          "requestBody"
        ]
      },
      "Payment_RequestBody": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "ID of the payment transaction.",
            "example": "0x0000000000000000000000000000000000000000000000000000000000000000"
          },
          "inUtxo": {
            "type": "string",
            "description": "For UTXO chains, this is the index of the transaction input with source address. Always 0 for the non-utxo chains.",
            "example": "123"
          },
          "utxo": {
            "type": "string",
            "description": "For UTXO chains, this is the index of the transaction output with receiving address. Always 0 for the non-utxo chains.",
            "example": "123"
          }
        },
        "required": [
          "transactionId",
          "inUtxo",
          "utxo"
        ]
      },
      "Payment_RequestNoMic": {
        "type": "object",
        "properties": {
          "attestationType": {
            "type": "string",
            "description": "ID of the attestation type.",
            "example": "0x5061796d656e7400000000000000000000000000000000000000000000000000"
          },
          "sourceId": {
            "type": "string",
            "description": "ID of the data source.",
            "example": "0x4254430000000000000000000000000000000000000000000000000000000000"
          },
          "requestBody": {
            "description": "Data defining the request. Type (struct) and interpretation is determined by the 'attestationType'.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Payment_RequestBody"
              }
            ]
          }
        },
        "required": [
          "attestationType",
          "sourceId",
          "requestBody"
        ]
      },
      "ReferencedPaymentNonexistence_RequestBody": {
        "type": "object",
        "properties": {
          "minimalBlockNumber": {
            "type": "string",
            "description": "The start block of the search range.",
            "example": "123"
          },
          "deadlineBlockNumber": {
            "type": "string",
            "description": "The blockNumber to be included in the search range.",
            "example": "123"
          },
          "deadlineTimestamp": {
            "type": "string",
            "description": "The timestamp to be included in the search range.",
            "example": "123"
          },
          "destinationAddressHash": {
            "type": "string",
            "description": "The standard address hash of the address to which the payment had to be done.",
            "example": "0x0000000000000000000000000000000000000000000000000000000000000000"
          },
          "amount": {
            "type": "string",
            "description": "The requested amount in minimal units that had to be payed.",
            "example": "123"
          },
          "standardPaymentReference": {
            "type": "string",
            "description": "The requested standard payment reference.",
            "example": "0x0000000000000000000000000000000000000000000000000000000000000000"
          }
        },
        "required": [
          "minimalBlockNumber",
          "deadlineBlockNumber",
          "deadlineTimestamp",
          "destinationAddressHash",
          "amount",
          "standardPaymentReference"
        ]
      },
      "ReferencedPaymentNonexistence_RequestNoMic": {
        "type": "object",
        "properties": {
          "attestationType": {
            "type": "string",
            "description": "ID of the attestation type.",
            "example": "0x5265666572656e6365645061796d656e744e6f6e6578697374656e6365000000"
          },
          "sourceId": {
            "type": "string",
            "description": "ID of the data source.",
            "example": "0x4254430000000000000000000000000000000000000000000000000000000000"
          },
          "requestBody": {
            "description": "Data defining the request. Type (struct) and interpretation is determined by the 'attestationType'.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferencedPaymentNonexistence_RequestBody"
              }
            ]
          }
        },
        "required": [
          "attestationType",
          "sourceId",
          "requestBody"
        ]
      },
      "AddressValidationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "VALID"
          },
          "response": {
            "type": "object",
            "properties": {
              "attestationType": {
                "type": "string"
              },
              "sourceId": {
                "type": "string"
              },
              "votingRound": {
                "type": "number"
              },
              "lowestUsedTimestamp": {
                "type": "string"
              },
              "requestBody": {
                "type": "object",
                "properties": {
                  "addressStr": {
                    "type": "string"
                  }
                }
              },
              "responseBody": {
                "type": "object",
                "properties": {
                  "isValid": {
                    "type": "boolean",
                    "example": true
                  },
                  "standardAddress": {
                    "type": "string"
                  },
                  "standardAddressHash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "PrepareRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "VALID"
          },
          "abiEncodedRequest": {
            "type": "string"
          }
        }
      }
    }
  }
}